
process {   
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 6.GB * task.attempt, 'memory' ) }
  time = { check_max( 4.h * task.attempt, 'time' ) }

  errorStrategy = { task.attempt <= 2 ? "retry" : "ignore" }   
  maxRetries = 2 
  // Base configuration for the processes 
  withLabel: small{
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withLabel: medium{
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 7.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }
  }
  withLabel: large{
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 12.GB * task.attempt, 'memory' ) }
    time = { check_max( 23.h * task.attempt, 'time' ) }
  }
  withLabel: small_multi{
    cpus = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 4.h * task.attempt, 'time' ) }
  }
  withLabel: gsalign{
    cpus = { check_max(params.minimap2_threads / 2 * task.attempt, 'cpus') }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }
  }
  withLabel: minimap2{
    cpus = { check_max(params.minimap2_threads / 2 * task.attempt, 'cpus') }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }
  }
}
