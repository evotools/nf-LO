{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/evotools/nf-LO/master/nextflow_schema.json",
    "title": "evotools/nf-LO pipeline parameters",
    "description": "Nextflow lift over pipeline.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "outdir"
            ],
            "properties": {
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "source": {
                    "type": "string",
                    "format": "file-path"
                },
                "target": {
                    "type": "string",
                    "format": "file-path"
                },
                "ncbi_source": {
                    "type": "boolean",
                    "default": false
                },
                "ncbi_target": {
                    "type": "boolean",
                    "default": false
                },
                "igenomes_source": {
                    "type": "boolean",
                    "default": false
                },
                "igenomes_target": {
                    "type": "boolean",
                    "default": false
                },
                "report": {
                    "type": "boolean",
                    "default": false,
                    "description": "Save HTML report."
                },
                "annotation": {
                    "type": "string",
                    "format": "file-path"
                },
                "annotation_format": {
                    "type": "string",
                    "default": "null",
                    "enum": ["null", "gff", "bed", "gtf", "vcf", "bam", "maf"]
                }
            }
        },
        "alignment_options": {
            "title": "Alignment options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options required to perform the alignments.",
            "properties": {
                "distance": {
                    "type": "string",
                    "default": "medium",
                    "enum": ["same", "near", "medium", "far", "balanced", "custom"]
                },
                "haplotypes": {
                    "type": "boolean",
                    "default": false
                },
                "aligner": {
                    "type": "string",
                    "default": "lastz",
                    "enum": ["lastz", "blat", "minimap2", "gsalign"]
                },
                "srcSize": {
                    "type": "integer",
                    "default": 20000000,
                    "description": "Chunk size of the source genome for the alignment" 
                },
                "srcOvlp": {
                    "type": "integer",
                    "default": 0,
                    "description": "Overlap size between chunks of the source genome"
                },
                "tgtSize": {
                    "type": "integer",
                    "default": 10000000,
                    "description": "Chunk size of the target genome for the alignment"
                },
                "tgtOvlp": {
                    "type": "integer",
                    "default": 100000,
                    "description": "Overlap size between chunks of the target genome"
                },
                "qscores": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the Q-scores to be used by the `lastz` alignment"
                },
                "custom": {
                    "type": "string",
                    "description": "Alignment custom options"
                }
            }
        },
        "chaining_options": {
            "title": "Chaining options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options required to tweak the chaining stage.",
            "properties": {
                "chainCustom": {
                    "type": "string",
                    "description": "Chaining custom options"
                },
                "chain_name": {
                    "type": "string",
                    "default": "liftover"
                },
                "no_netsynt": {
                    "type": "boolean",
                    "default": false
                }        
            }
        },
        "liftover_options": {
            "title": "Liftover options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options required to tweak the liftover stage.",
            "properties": {
                "liftover_algorithm": {
                    "type": "string",
                    "default": "liftover",
                    "enum": ["liftover", "crossmap"]
                }
            }
        },
        "maf_options": {
            "title": "Multiple-alignment format options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Optional: generate the MAF output and its statistics.",
            "properties": {
                "maf_tgt_name": {
                    "type": "string",
                    "default": "tgt"
                },
                "no_maf": {
                    "type": "boolean",
                    "default": false
                },
                "mafTools": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the installation directory of mafTools"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "mamba": {
                    "description": "Use mamba instead of conda to create the anaconda environment.",
                    "type": "boolean",
                    "default": false
                },
                "extra_cluster_options": {
                    "description": "Additional cluster options to be used; valid in some clusters only.",
                    "type": "string",
                    "default": ""
                },
                "my_config": {
                    "description": "Custom configuration file from the user.",
                    "type": "string",
                    "default": ""
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/alignment_options"
        },
        {
            "$ref": "#/definitions/chaining_options"
        },
        {
            "$ref": "#/definitions/liftover_options"
        },
        {
            "$ref": "#/definitions/maf_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
